# -*- coding: utf-8 -*-
from sql import SQLighter
import requests
import json
import os
from threading import Thread
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove,ReplyKeyboardMarkup, KeyboardButton
from time import sleep
import traceback

from parserwb_ozon import start_parse,start_loop,regions

bot = Bot(token='5490688808:AAE9EVs8TSxndZt7FDAo7JyjwVIftI6DkH4')
dp = Dispatcher(bot)

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
db_path = os.path.join(BASE_DIR, "db.db")

db = SQLighter(db_path)

first_button = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–ù–∞—á–∞—Ç—å'))

start_buttons = ReplyKeyboardMarkup().add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–û—Ç—á—ë—Ç –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'))
start_buttons_goods = ReplyKeyboardMarkup().add(KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç')).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')).add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')).add(KeyboardButton('–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
start_buttons_copetitor = ReplyKeyboardMarkup().add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ')).add(KeyboardButton('–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö —É–¥–∞–ª–µ–Ω–∏–µ')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))

edit_keyboard = ReplyKeyboardMarkup().add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã')).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä')).add(KeyboardButton('–ù–∞–∑–∞–¥'))
edit_search_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π')).add(KeyboardButton('–ù–∞–∑–∞–¥'))

admin_chats = ['340549861','618939593']



def get_admin_data():
	with open(f'admin_data.json','r',encoding='utf-8-sig') as file:
		admin_data = json.loads(file.read())

	return admin_data

def save_admin_data(admin_data):
	with open(f'admin_data.json','w',encoding='utf-8-sig') as file:
		file.write(json.dumps(admin_data))

def get_products(chat_id='',name=''):
	print('name is ',name)
	if not 'products' in name:
		name = f'products{name} {chat_id}.json'
	
	with open(f'products/{name}','r',encoding='utf-8-sig') as file:
		products = json.loads(file.read())

	return products

def users_string(amount):
	if amount > 9:
		amount %= 10
	
	if amount == 1:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
	elif amount < 5:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
	else:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'

def human_string(amount):
	if amount > 9:
		amount %= 10
	
	if amount > 1 and amount < 5:
		return '—á–µ–ª–æ–≤–µ–∫–∞'
	else:
		return '—á–µ–ª–æ–≤–µ–∫'

def get_info():
	registred_users = db.get_users()
	users = []
	users_search = []
	users_products = []
	searches = []
	products = []
	admin_data = get_admin_data()

	for filename in os.listdir("products"):
		with open(os.path.join("products", filename), 'r',encoding='utf-8-sig') as f:
			data = get_products(name=filename)
			
			if data == [] or data == {}:
				continue

			if not filename.split()[1] in users:
				users.append(filename.split()[1])

			print(filename)
			if not '_competive' in filename:
				print(data)
				for product in data:
					print(product)
					if 'search' in product:
						for search in product['search']:
							if not search in searches:
								searches.append(search)
					else:
						searches.append(product['url'])
				
				if not filename.split()[1] in users_search:
					users_search.append(filename.split()[1])
			else:
				for product in data:
					if not product in products:
						products.append(product)
				if not filename.split()[1] in users_products:
					users_products.append(filename.split()[1])

	strings = ['1. –í –±–æ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - ','2. –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - ','3.–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ - ','4.–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ - ','5. –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è - ','6. –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è - ']
	data = [registred_users,users,users_search,users_products,searches,products]
	admin_keys = list(admin_data.keys())
	info = ''
	
	for i in range(len(strings)):
		diff = len(data[i]) - int(admin_data[admin_keys[i]])
		end = 'üü¢' if diff >= 0 else 'üî¥'
		sybmol = '+' if int(diff) >= 0 else ''

		end = f'({sybmol}{diff}) {end}'

		info += strings[i]+str(len(data[i]))+end+'\n'
		admin_data[admin_keys[i]] = len(data[i])

	save_admin_data(admin_data)
	
	return info

def save_products(products,chat_id,name=''):
	print('saving')
	with open(f'products/products{name} {chat_id}.json','w',encoding='utf-8-sig') as file:
		file.write(json.dumps(products))

async def post(message):
	users = db.get_users()

	for user in users:
		user = user[0]
		if not os.path.exists('photo.png'):
			await bot.send_message(chat_id=user,text=message)
		else:
			with open('photo.png', 'rb') as photo:
				await bot.send_photo(chat_id=user,caption=message,photo=photo)
			

@dp.message_handler(content_types=['text','document','photo'])
async def answer_message(message,text=''):
	start_message = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
	first_message = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç —Ç–µ–±–µ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–µ–Ω, –≤–æ—Ç —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç:\n\n\n1.–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ WildBerries –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö. –ü–æ–ª–µ–∑–Ω–æ –∑–Ω–∞—Ç—å –∫–∞–∫ —Ä–∞—Å—Ç—ë—Ç –≤–∞—à —Ç–æ–≤–∞—Ä –ø—Ä–∏ –µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞—á–∞–ª–∏ –ø–∞–¥–∞—Ç—å. –ë–æ—Ç —Ç–∞–∫–∂–µ –ø–æ–º–æ–∂–µ—Ç –≤ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –µ–º—É –≤—ã –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å –ø–æ—è–≤–∏–ª—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –≤ –ø–æ–∏—Å–∫–µ –ø–æ –Ω—É–∂–Ω—ã–º –≤–∞–º –∑–∞–ø—Ä–æ—Å–∞–º –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø—Ä–æ–ø–∞–ª –∏–∑ –ø–æ–∏—Å–∫–∞\n\n\n2.–°–ª–µ–¥–∏—Ç—å –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤–∞—à–∏—Ö –≥–ª–∞–≤–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, —Å–æ–æ–±—â–∞—è –∫–æ–≥–¥–∞ –æ–Ω–∏ –º–µ–Ω—è—é—Ç —Ü–µ–Ω—É –∏–ª–∏ –∏—Ö —Ç–æ–≤–∞—Ä –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è"
	start_buttons = ReplyKeyboardMarkup().add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–û—Ç—á—ë—Ç –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'))
	chat_id = message.chat.id
	markets = ['Ozon','WildBerries']
	files = ['_wb','_wb_competive','_ozon']

	twice_answer = False
	twice_answer_text = ''


	if not db.user_exists(str(chat_id)):
		db.add_user(str(chat_id))
		db.update_status(chat_id,'first')
		
		for file in files:
			blank = [] if not 'competive' in file else {}
			save_products(blank,chat_id,file)

		await message.answer(first_message,reply_markup=first_button)
		return

	else:
		for file in files:
			print('products'+file+' '+str(chat_id)+'.json')
			if not os.path.exists('products/products'+file+' '+str(chat_id)+'.json'):
				blank = [] if not 'competive' in file else {}
				save_products(blank,chat_id,file)
	
	status = db.get_status(chat_id)
	if text == '':
		text = message.text
	keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
	answer = ''
	
	save = False
	parse = False

	save_name = '_wb'
	products = get_products(chat_id,save_name)

	admin_rights = False

	if str(chat_id) in admin_chats:
		admin_rights = True
		start_buttons = ReplyKeyboardMarkup().add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–û—Ç—á—ë—Ç –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤')).add(KeyboardButton('/info')).add(KeyboardButton('/post'))
	
	if text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
		if status != 'main':
			start_message = '–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω,–≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
		db.update_status(chat_id,'start')
		await message.answer(start_message,reply_markup=start_buttons)
		return

	elif text == '/start':
		db.update_status(chat_id,'first')
		await message.answer(first_message,reply_markup=first_button)
		return

	if admin_rights:
		if message.text == '/info' and admin_rights:
			info = get_info()
			await message.answer(info,reply_markup=start_buttons)
			return

		elif message.text == '/post' and admin_rights:
			db.update_status(chat_id,'post')
			await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏',reply_markup=keyboard)
			return
	
	if 'post' in status:
		if not 'start' in status:
			db.update_status(chat_id,'post start')
	
			if message.photo != []:
				await message.photo[-1].download('photo.png')
				text = message.caption
			elif os.path.exists('photo.png'):
				os.remove('photo.png')
			
			db.update_temp(chat_id,text)
			keyboard = ReplyKeyboardMarkup().add('–î–∞').add('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
			await message.answer('–í—ã —É–≤–µ—Ä–µ–Ω—ã,—á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–∫—É —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è?',reply_markup=keyboard)
		else:
			if text == '–î–∞':
				print('post')
				text = db.get_temp(chat_id)
				await post(text)
				await message.answer(start_message,reply_markup=start_buttons)
		return

	if status == 'first':
		keyboard = start_buttons
		answer = start_message
		db.update_status(chat_id,'start')
	elif status == 'start':
		if text == '–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤':
			keyboard = start_buttons_goods
			answer = '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä, –±–æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –±—É–¥–µ—Ç –æ—Ç—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –æ —Ç–æ–º –∫–∞–∫ –º–µ–Ω—è—é—Ç—Å—è –µ–≥–æ –ø–æ–∑–∏—Ü–∏–∏\n\n\n–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á—ë—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ 10:00 –ø–æ –ú—Å–∫\n\n\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –µ–≥–æ –ø–æ–∑–∏—Ü–∏—è—Ö'
			db.update_status(chat_id,'goods_main')
		elif text == '–û—Ç—á—ë—Ç –ø–æ –¥–µ–π—Å—Ç–≤–∏—è–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤':
			keyboard = start_buttons_copetitor
			answer = '–ë–æ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç –≤–∞—Å –∫–æ–≥–¥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç —Å–º–µ–Ω–∏—Ç —Ü–µ–Ω—É –∏–ª–∏ –µ–≥–æ —Ç–æ–≤–∞—Ä –≤—ã–ø–∞–¥–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è\n\n\n–≠—Ç–æ –≤–∞–∂–Ω–æ, –µ—Å–ª–∏ –≤–∞—à —Ç–æ–≤–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã—Ö –º–µ—Å—Ç–∞—Ö –≤ —Ç–æ–ø–µ. –¢–æ–≥–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –±—É–¥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏, –∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ—Ç—É –≤—ã –±—É–¥–µ—Ç–µ –≤ –∫—É—Ä—Å–µ –∏ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞–µ—Ç–µ –µ—Å–ª–∏ –≤–∞—à –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –Ω–∞—á–Ω—ë—Ç –¥–µ–º–ø–∏–Ω–≥–æ–≤–∞—Ç—å –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç –∑–∞–≤—ã—Å–∏—Ç —Ü–µ–Ω—É, –∏ —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É, –ø—Ä–∏–≤–ª–µ—á—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –±–æ–ª—å—à–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–æ–¥–∞–∂\n\n\n–≠—Ç–æ –∂–µ –∫–∞—Å–∞–µ—Ç—Å—è –∏ –º–æ–º–µ–Ω—Ç–æ–≤ –∫–æ–≥–¥–∞ –≤–∞–∂–Ω—ã–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è, –≤ —ç—Ç–æ –≤—Ä–µ–º—è –≤—ã–≥–æ–¥–Ω–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å —Ü–µ–Ω—ã, –≤–µ–¥—å –≤–∞–º –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–æ–ª—å—à–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π\n\n\n–¢–∞–∫–∂–µ –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–µ–Ω. –ß—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (–ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ–±—è), –∞ —Ç–∞–∫–∂–µ —É–±–µ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º —á—Ç–æ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–∏–ª–∞—Å—å –∏ —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–∏–ª—Å—è –≤ –∞–∫—Ü–∏—é'
			db.update_status(chat_id,'competitor_main')

	elif status == 'period':
		periods = [1,3,7,31]
		days_past = 0

		if not text.isnumeric() or int(text) > len(periods):
			answer = '–ù–µ –≤–æ–∑–º–æ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
		else:
			days_max = periods[int(text)-1]
			db.update_user(days_max,days_past,chat_id)
			answer = '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞'
		db.update_status(chat_id,'start')
		keyboard = start_buttons
	
	if 'goods' in status:
		if 'main' in status:
			if text == '–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç':
				answer = ''
				db.update_status(chat_id,'start')
				keyboard = ReplyKeyboardMarkup()
				parse = True
			elif text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä':
				db.update_status(chat_id,'goods_add_product_url')
				answer = '–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä'
			elif text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
				answer = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫–µ—Ç'
				keyboard = ReplyKeyboardMarkup().add(KeyboardButton('Ozon')).add(KeyboardButton('WildBerries')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
				db.update_status(chat_id,'change_market')
			elif text == '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞':
				answer = '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ—Ç—á—ë—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–π –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤: :\n\n1.–ö–∞–∂–¥—ã–π –¥–µ–Ω—å\n2.–ö–∞–∂–¥—ã–µ —Ç—Ä–∏ –¥–Ω—è\n3.–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é\n4.–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü\n\n–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω—É–∂–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞'
				db.update_status(chat_id,'period')

	if 'add_product' in status:
		if 'url' in status:
			try:
				if 'ozon' in text:
					id_ = text.split('/?')[0].split('-')[-1]
				elif 'wildberries' in text:	
					id_ = text.split('/')[4].split('/')[0]
				else:
					id_ = ''
			except:
				traceback.print_exc()
				id_ = ''

			if id_.isnumeric():
				db.update_status(chat_id,'goods_add_product_name')
				answer = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'
				db.update_temp(chat_id,text)
			else:
				db.update_status(chat_id,'start')
				answer = '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞,–Ω–µ–≤–µ—Ä–Ω—ã–π url'
				keyboard = start_buttons
		
		elif 'name' in status:
			temp = db.get_temp(chat_id)
			if 'wildberries' in temp:
				db.update_temp(chat_id,temp+','+text)
				db.update_status(chat_id,'goods_add_product_search')
				answer = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è , —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é'
			elif 'ozon' in temp:
				save_name = '_ozon'
				products = get_products(chat_id,save_name)
				name = text
				db.update_status(chat_id,'start')
				answer = f'–¢–æ–≤–∞—Ä "{name}" –¥–æ–±–∞–≤–ª–µ–Ω'
				product = {'url':temp,'name':name,'place':{'–º–æ—Å–∫–≤–∞':None,'–∫–∞–∑–∞–Ω—å':None}}
				products.append(product)
				keyboard = start_buttons
			
				save = True

		elif 'search' in status:
			db.update_status(chat_id,'start')
			url,name = db.get_temp(chat_id).split(',')
			id_ = int(url.split('/')[4].split('/')[0])
			
			product = {'url':url,'name':name,'search':[]}

			for search in text.split(','):
				plases = {}
				
				for region in regions:
					plases[region] = None
				
				product['search'].append([search,plases]) 

			products.append(product)
			save = True
			answer = f'–¢–æ–≤–∞—Ä "{name}" –¥–æ–±–∞–≤–ª–µ–Ω'
			keyboard = start_buttons
	
	elif 'change' in status:
		if 'market' in status:
			if text in markets:
				if text == 'WildBerries':
					need_to = '–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'
					new_status = 'change_wb_goods_change_choose'
				elif text == 'Ozon':
					save_name = '_ozon'
					products = get_products(chat_id,save_name)
					
					need_to = '—É–¥–∞–ª–∏—Ç—å'
					new_status = 'change_ozon_delete_choose'
				
				if len(products) > 0:
					list_text = ''
					for i in range(len(products)):
						list_text += str(i+1)+') '+products[i]['name']+'\n\n' 
					answer = f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: \n\n{list_text}\n\n –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Ä—è–¥–æ–∫–≤—ã–π –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞,–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ '+need_to
					db.update_status(chat_id,new_status)
				else:
					answer = f'–¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç'
					keyboard = start_buttons
					db.update_status(chat_id,'start')
		else:
			db.update_status(chat_id,'start')
			answer = '–¢–∞–∫–æ–π –º–∞—Ä–∫–µ—Ç –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
			keyboard = start_buttons

		if 'wb' in status:
			if 'choose' in status:
				if not text.isnumeric() or int(text) > len(products):
					answer = '–¢–∞–∫–æ–π –Ω–æ–º–µ—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
					keyboard = start_buttons
					db.update_status(chat_id,'start')
				else:	
					db.update_status(chat_id,'wb_goods_change_product')
					db.update_temp(chat_id,text)
					name = products[int(text)-1]['name']
					
					answer = f'–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å {text} —Ç–æ–≤–∞—Ä–æ–º,{name}'
					keyboard = edit_keyboard
			elif 'product' in status:
				if text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã':
					db.update_status(chat_id,'wb_goods_change_search')

					temp = db.get_temp(chat_id)
					num = int(temp)-1
					name = products[num]['name']
					search_list = ''
					search = products[num]['search']
					count = 1
					
					for i in range(len(search)):
						search_list += str(i+1)+') '+search[i][0]+'\n'
					
					answer = f'–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è `{name}`:\n\n {search_list} \n–û—Ç–ø—Ä–∞–≤—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å'
					keyboard = edit_search_keyboard
				elif text == '–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä':
					db.update_status(chat_id,'change_market')
					temp = db.get_temp(chat_id)
					del products[int(temp)-1]
					answer = f'–¢–æ–≤–∞—Ä {temp} —É–¥–∞–ª—ë–Ω'
					save = True
					twice_answer = True
					twice_answer_text = 'WildBerries'

				elif text == '–ù–∞–∑–∞–¥':
					answer = ''
					db.update_status(chat_id,'change_market')
					twice_answer = True
					twice_answer_text = 'WildBerries'
			
			elif 'search' in status:
				temp = db.get_temp(chat_id)
				if 'add' in status:
					db.update_status(chat_id,'wb_goods_change_product')
					answer = '–ó–∞–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª–µ–Ω,–æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç—á—ë—Ç'
					keyboard = start_buttons

					products[int(temp)-1]['search'].append([text,None])
					save = True

					twice_answer = True
					twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã'
				
				elif text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π':
					db.update_status(chat_id,'wb_goods_change_search_add')
					answer = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä—É '+products[int(temp)-1]['name']

				elif text == '–ù–∞–∑–∞–¥':
					answer = ''
					db.update_status(chat_id,'change_market')
					twice_answer = True
					twice_answer_text = 'WildBerries'
				else:
					db.update_status(chat_id,'wb_goods_change_product')
					keyboard = start_buttons
					
					if text.isnumeric():
						name = products[int(temp)-1]['name']

						if len(name) > 15:
							name = name[:15]+'...'
						
						search = products[int(temp)-1]['search'][int(text)-1][0]
						answer = f'–ó–∞–ø—Ä–æ—Å {search} –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {name} - —É–¥–∞–ª—ë–Ω'
						del products[int(temp)-1]['search'][int(text)-1]
						save = True
						twice_answer = True
						twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã'
					else:
						answer = '–¢–∞–∫–æ–π –Ω–æ–º–µ—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'

		elif 'ozon' in status:
			save_name = '_ozon'
			products = get_products(chat_id,save_name)
			
			if 'delete' in status:
				keyboard = start_buttons
				db.update_status(chat_id,'change_market')
				
				if text.isnumeric() and int(text) <= len(products):
					del products[int(text)-1]
					answer = f'–¢–æ–≤–∞—Ä {text} —É–¥–∞–ª—ë–Ω'
					save = True
					twice_answer = True
					twice_answer_text = 'Ozon'
	
	elif 'competitor' in status:
		if 'main' in status:
			if text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ':
				answer = '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'
				db.update_status(chat_id,'competitor_add_url')
			elif text == '–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö —É–¥–∞–ª–µ–Ω–∏–µ':
				db.update_status(chat_id,'competitor_delete')
				answer = '–£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'
				print('products/products_wb_competive '+str(chat_id))
				if os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
					products = get_products(chat_id,'_wb_competive')
					
					if products != {}:
						answer = ''
						count = 1
						for product in products:
							answer += str(count)+'. '+products[product]['name']+'\n'
							count += 1
						answer += '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å'
		
		elif 'delete' in status:
			if text.isnumeric() and os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
				products = get_products(chat_id,'_wb_competive')
				db.update_status(chat_id,'start')
				keyboard = start_buttons

				if not int(text)-1 >= len(products):
					count = 0
					for product in products:
						if count == int(text)-1:
							name = products[product]['name']
							del products[product]
							break
						count += 1
					answer = f'–¢–æ–≤–∞—Ä {name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏ –±–æ–ª–µ–µ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è'
					save = True
					save_name = '_wb_competive'

				else:
					answer = '–¢–∞–∫–æ–π —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
			else:
				db.update_status(chat_id,'start')
				answer = '–ù–µ–≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä'
				keyboard = start_buttons

		elif 'add' in status:
			if 'url' in status:
				try:
					id_ = text.split('/')[4].split('/')[0]
				except:
					id_ = ''
				
				if not id_ == '':
					answer = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, "–¢–æ–≤–∞—Ä –ø–æ–¥—É—à–∫–∞ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –ò–ü –ü—É–ø–∫–∏–Ω"'
					db.update_status(chat_id,'competitor_add_name')
					db.update_temp(chat_id,id_)
				else:
					db.update_status(chat_id,'start')
					answer = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π url'
					keyboard = start_buttons
			
			elif 'name' in status:
				db.update_status(chat_id,'start')
				answer = '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω, –±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è'
				keyboard = start_buttons
				id_ = db.get_temp(chat_id)

				if os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
					products = get_products(chat_id,'_wb_competive')
				else:
					products = {}

				price = {}
				for region in regions:
					price[region] = '0'
				
				products[id_] = {'name':text,'price':price}
				save = True
				save_name = '_wb_competive'
	

	if save:
		save_products(products,chat_id,save_name)

	if answer != '':
		await message.answer(answer,reply_markup=keyboard)
	
	if twice_answer:
		await answer_message(message,twice_answer_text)

	if parse:
		start_parse(str(chat_id))


if __name__ == '__main__':
	Thread(target=start_loop,args=[]).start()
	executor.start_polling(dp,skip_updates=True)