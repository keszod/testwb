# -*- coding: utf-8 -*-
import traceback
import requests
import json
import os
import copy
from sql import SQLighter
from threading import Thread
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove,ReplyKeyboardMarkup, KeyboardButton
from time import sleep
from config import token

from parserwb_ozon import start_parse,start_loop,regions,add_competitor_shop

bot = Bot(token=token)
dp = Dispatcher(bot)

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
db_path = os.path.join(BASE_DIR, "db.db")

db = SQLighter(db_path)

first_button = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–ù–∞—á–∞—Ç—å'))
shared_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
start_buttons = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤'),KeyboardButton('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏'))
start_buttons_goods = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç')).add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'),KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
start_buttons_copetitor = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞')).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ'),KeyboardButton('–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö —É–¥–∞–ª–µ–Ω–∏–µ')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))

edit_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã')).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä')).add(KeyboardButton('–ù–∞–∑–∞–¥'))
edit_search_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π')).add(KeyboardButton('–ù–∞–∑–∞–¥'))

admin_chats = ['340549861','618939593']



def get_admin_data():
	with open(f'admin_data.json','r',encoding='utf-8-sig') as file:
		admin_data = json.loads(file.read())

	return admin_data

def save_admin_data(admin_data):
	with open(f'admin_data.json','w',encoding='utf-8-sig') as file:
		file.write(json.dumps(admin_data))

def get_products(chat_id='',name=''):
	print('name is ',name)
	if not 'products' in name:
		name = f'products{name} {chat_id}.json'
	
	with open(f'products/{name}','r',encoding='utf-8-sig') as file:
		products = json.loads(file.read())

	return products

def users_string(amount):
	if amount > 9:
		amount %= 10
	
	if amount == 1:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
	elif amount < 5:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
	else:
		return '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'

def human_string(amount):
	if amount > 9:
		amount %= 10
	
	if amount > 1 and amount < 5:
		return '—á–µ–ª–æ–≤–µ–∫–∞'
	else:
		return '—á–µ–ª–æ–≤–µ–∫'

def get_info():
	registred_users = db.get_users()
	users = []
	users_search = []
	users_products = []
	searches = []
	products = []
	shops_users = 0
	admin_data = get_admin_data()

	for filename in os.listdir("products"):
		with open(os.path.join("products", filename), 'r',encoding='utf-8-sig') as f:
			data = get_products(name=filename)
			if data == [] or data == {}:
				continue

			if 'shop' in filename:
				shops_users += 1
				continue
			if not filename.split()[1] in users:
				users.append(filename.split()[1])

			print(filename)
			if not '_competive' in filename:
				print(data)
				for product in data:
					print(product)
					if 'search' in product:
						for search in product['search']:
							if not search in searches:
								searches.append(search)
					else:
						searches.append(product['url'])
				
				if not filename.split()[1] in users_search:
					users_search.append(filename.split()[1])
			else:
				for product in data:
					if not product in products:
						products.append(product)
				if not filename.split()[1] in users_products:
					users_products.append(filename.split()[1])

	strings = ['1. –í –±–æ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - ','2. –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - ','3.–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ - ','4.–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Ç–æ–≤–∞—Ä—ã –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ - ','5. –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è - ','6. –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è - ','7. –õ—é–¥–µ–π –æ—Ç—Å–ª–µ–∂–∏–∞—é—Ç –º–∞–≥–∞–∑–∏–Ω—ã - ']
	data = [registred_users,users,users_search,users_products,searches,products,shops_users]
	admin_keys = list(admin_data.keys())
	info = ''
	
	for i in range(len(strings)):
		if isinstance(data[i], list):
			amount = len(data[i])
		else:
			amount = data[i]
		diff = amount - int(admin_data[admin_keys[i]])
		end = 'üü¢' if diff >= 0 else 'üî¥'
		sybmol = '+' if int(diff) >= 0 else ''

		end = f'({sybmol}{diff}) {end}'

		info += strings[i]+str(amount)+end+'\n'
		admin_data[admin_keys[i]] = amount

	save_admin_data(admin_data)
	
	return info

def save_products(products,chat_id,name=''):
	print('saving')
	with open(f'products/products{name} {chat_id}.json','w',encoding='utf-8-sig') as file:
		file.write(json.dumps(products))

async def post(message):
	users = db.get_users()

	for user in users:
		user = user[0]
		if not os.path.exists('photo.png'):
			await bot.send_message(chat_id=user,text=message)
		else:
			with open('photo.png', 'rb') as photo:
				await bot.send_photo(chat_id=user,caption=message,photo=photo)
			

@dp.message_handler(content_types=['text','document','photo'])
async def answer_message(message,text='',chat_id=''):
	start_message = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
	first_message = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç —Ç–µ–±–µ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–µ–Ω, –≤–æ—Ç —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç:\n\n\n1. –ú–æ–∂–µ—Ç –≤–∑—è—Ç—å –≤–∞—à –º–∞–≥–∞–∑–∏–Ω –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏ —É–≤–µ–¥–æ–º–ª—è—Ç—å –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, –ª–∏–±–æ –æ–Ω –≤—ã–ø–∞–ª –∏–∑ –Ω–∞–ª–∏—á–∏—è. –≠—Ç–æ –∑–∞—Å—Ç—Ä–∞—Ö—É–µ—Ç –≤–∞—Å –æ—Ç –æ—à–∏–±–æ–∫ –≤ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –∏ –ø–æ–º–æ–∂–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π –≤–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–æ–∂–µ—Ç –≤–æ–≤—Ä–µ–º—è —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –≤—ã–ø–∞–¥–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –Ω–∞–ª–∏—á–∏—è –ø–æ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–µ\n\n2. –ü–æ–º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ WildBerries. –ü–æ–ª–µ–∑–Ω–æ –∑–Ω–∞—Ç—å –∫–∞–∫ —Ä–∞—Å—Ç—ë—Ç –≤–∞—à —Ç–æ–≤–∞—Ä –ø—Ä–∏ –µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞—á–∞–ª–∏ –ø–∞–¥–∞—Ç—å. –ë–æ—Ç —Ç–∞–∫–∂–µ –ø–æ–º–æ–∂–µ—Ç –≤ SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –±–ª–∞–≥–æ–¥–∞—Ä—è –µ–º—É –≤—ã –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å –ø–æ—è–≤–∏–ª—Å—è –ª–∏ —Ç–æ–≤–∞—Ä –≤ –ø–æ–∏—Å–∫–µ –ø–æ –Ω—É–∂–Ω—ã–º –≤–∞–º –∑–∞–ø—Ä–æ—Å–∞–º –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø—Ä–æ–ø–∞–ª –∏–∑ –ø–æ–∏—Å–∫–∞\n\n3. –ü–æ–∫–∞–∂–µ—Ç –≤—ã–¥–∞—á—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤. –í–∞—à —Ç–æ–≤–∞—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ç–æ–ø–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –ú–æ—Å–∫–≤–µ, –Ω–æ –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ –≤ —Å–∞–º–æ–º –Ω–∏–∑—É –≤—ã–¥–∞—á–∏. –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –≤–∞—à—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–∫–ª–∞–¥–∞–º\n\n4. –ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, —Å–æ–æ–±—â–∞—è –∫–æ–≥–¥–∞ –æ–Ω–∏ –º–µ–Ω—è—é—Ç —Ü–µ–Ω—É –∏–ª–∏ –∏—Ö —Ç–æ–≤–∞—Ä –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è. –ü—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —Ä–µ–∞–≥–∏—Ä—É–π—Ç–µ –Ω–∞ –ª—é–±—ã–µ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–≤—ã—à–∞–π—Ç–µ —Ü–µ–Ω—É –∫–æ–≥–¥–∞ –æ–Ω –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è –∏ –≤–æ–≤—Ä–µ–º—è –∑–∞–º–µ—á–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ—Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω—ã –Ω–∞ –≤–∞—à —Ç–æ–≤–∞—Ä"
	start_buttons = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤'),KeyboardButton('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏'),KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏'))
	
	if chat_id == '':
		chat_id = message.chat.id 
		twice_chat_id = ''
	else:
		twice_chat_id = chat_id

	markets = ['Ozon','WildBerries']
	files = ['_wb','_wb_competive','_ozon','_shop']
	chat_id_products = chat_id

	if db.get_shared(chat_id) and 'shared' in db.get_shared(chat_id):
		chat_id_products =  db.get_shared(chat_id).split('_')[1]

	twice_answer = False
	twice_answer_text = ''


	if not db.user_exists(str(chat_id)):
		if message.from_user.username:
			db.add_user(str(chat_id),message.from_user.username)
		else:
			db.add_user(str(chat_id),message.from_user.first_name)

		db.update_status(chat_id,'first')

		await message.answer(first_message,reply_markup=first_button)
		return

	else:
		for file in files:
			print('products'+file+' '+str(chat_id)+'.json')
			if not os.path.exists('products/products'+file+' '+str(chat_id)+'.json'):
				blank = {} if ('competive' in file or 'shop' in file) else []
				save_products(blank,chat_id,file)

		if twice_chat_id == '':
			if message.from_user.username:
				if db.get_nick(chat_id) != message.from_user.username:
					db.add_nick_name(chat_id,message.from_user.username)
			else:
				if db.get_nick(chat_id) != message.from_user.first_name:
					db.add_nick_name(chat_id,message.from_user.first_name)
	
	status = db.get_status(chat_id)
	if text == '':
		text = message.text
	keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
	answer = ''
	
	save = False
	parse = False

	save_name = '_wb'
	products = get_products(chat_id_products,save_name)

	admin_rights = False

	if str(chat_id) in admin_chats:
		admin_rights = True
		start_buttons = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤'),KeyboardButton('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤')).add(KeyboardButton('–ê–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏'),KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')).add(KeyboardButton('/info'),KeyboardButton('/post'))
	
	if text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
		if status != 'main':
			start_message = '–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω,–≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
		db.update_status(chat_id,'start')
		await message.answer(start_message,reply_markup=start_buttons)
		return

	elif text == '/start':
		db.update_status(chat_id,'first')
		await message.answer(first_message,reply_markup=first_button)
		return

	if admin_rights:
		if message.text == '/info' and admin_rights:
			info = get_info()
			await message.answer(info,reply_markup=start_buttons)
			return

		elif message.text == '/post' and admin_rights:
			db.update_status(chat_id,'post')
			await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏',reply_markup=keyboard)
			return
	
	if 'post' in status:
		if not 'start' in status:
			db.update_status(chat_id,'post start')
	
			if message.photo != []:
				await message.photo[-1].download('photo.png')
				text = message.caption
			elif os.path.exists('photo.png'):
				os.remove('photo.png')
			
			db.update_temp(chat_id,text)
			keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add('–î–∞').add('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
			await message.answer('–í—ã —É–≤–µ—Ä–µ–Ω—ã,—á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–∫—É —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è?',reply_markup=keyboard)
		else:
			if text == '–î–∞':
				print('post')
				text = db.get_temp(chat_id)
				await post(text)
				await message.answer(start_message,reply_markup=start_buttons)
		return

	if status == 'first':
		keyboard = start_buttons
		answer = start_message
		db.update_status(chat_id,'start')
	elif status == 'start':
		if text == '–û—Ç—á—ë—Ç –æ –ø–æ–∑–∏—Ü–∏—è—Ö —Ç–æ–≤–∞—Ä–æ–≤':
			keyboard = start_buttons_goods
			answer = '–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä, –±–æ—Ç –±—É–¥–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ –æ—Ç—á–∏—Ç—ã–≤–∞—Ç—å—Å—è –æ —Ç–æ–º –∫–∞–∫ –º–µ–Ω—è—é—Ç—Å—è –µ–≥–æ –ø–æ–∑–∏—Ü–∏–∏\n\n–û—Ç—á—ë—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ 10:00 –ø–æ –ú—Å–∫ —Å –∑–∞–¥–∞–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–æ–≤ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞'
			db.update_status(chat_id,'goods_main')
		elif text == '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ü–µ–Ω –∏ –∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤':
			keyboard = start_buttons_copetitor
			answer = '–ë–æ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç –≤–∞—Å –∫–æ–≥–¥–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç —Å–º–µ–Ω–∏—Ç —Ü–µ–Ω—É –∏–ª–∏ –µ–≥–æ —Ç–æ–≤–∞—Ä –≤—ã–ø–∞–¥–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è\n\n\n–≠—Ç–æ –≤–∞–∂–Ω–æ, –µ—Å–ª–∏ –≤–∞—à —Ç–æ–≤–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã—Ö –º–µ—Å—Ç–∞—Ö –≤ —Ç–æ–ø–µ. –¢–æ–≥–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –±—É–¥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏, –∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ—Ç—É –≤—ã –±—É–¥–µ—Ç–µ –≤ –∫—É—Ä—Å–µ –∏ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞–µ—Ç–µ –µ—Å–ª–∏ –≤–∞—à –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –Ω–∞—á–Ω—ë—Ç –¥–µ–º–ø–∏–Ω–≥–æ–≤–∞—Ç—å –∏–ª–∏ –Ω–∞–æ–±–æ—Ä–æ—Ç –∑–∞–≤—ã—Å–∏—Ç —Ü–µ–Ω—É, –∏ —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É, –ø—Ä–∏–≤–ª–µ—á—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –±–æ–ª—å—à–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–æ–¥–∞–∂\n\n\n–≠—Ç–æ –∂–µ –∫–∞—Å–∞–µ—Ç—Å—è –∏ –º–æ–º–µ–Ω—Ç–æ–≤ –∫–æ–≥–¥–∞ –≤–∞–∂–Ω—ã–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –Ω–∞–ª–∏—á–∏—è, –≤ —ç—Ç–æ –≤—Ä–µ–º—è –≤—ã–≥–æ–¥–Ω–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å —Ü–µ–Ω—ã, –≤–µ–¥—å –≤–∞–º –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–æ–ª—å—à–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π\n\n\n–¢–∞–∫–∂–µ –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–µ–Ω. –ß—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (–ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ–±—è), –∞ —Ç–∞–∫–∂–µ —É–±–µ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º —á—Ç–æ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–∏–ª–∞—Å—å –∏ —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–∏–ª—Å—è –≤ –∞–∫—Ü–∏—é'
			db.update_status(chat_id,'competitor_main')
		elif text == '–ê–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏':
			keyboard = shared_keyboard
			answer = '–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –±–æ—Ç, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–±—â–∏–º —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –≤–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –∫ —Å–≤–æ–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É, —É–∫–∞–∑–∞–≤ –Ω–∏–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º'
			db.update_status(chat_id,'shared_main')
		elif text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
			keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–∞–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω/—Ä–µ–≥–∏–æ–Ω—ã'),KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω/—Ä–µ–≥–∏–æ–Ω—ã')).add(KeyboardButton('–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
			answer = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
			db.update_status(chat_id,'settings choose')

	elif status == 'period':
		periods = [1,3,7,31]
		days_past = 0

		if not text.isnumeric() or int(text) > len(periods):
			answer = '–ù–µ –≤–æ–∑–º–æ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç'
		else:
			days_max = periods[int(text)-1]
			db.update_user(days_max,days_past,chat_id)
			answer = '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞'
		db.update_status(chat_id,'start')
		keyboard = start_buttons

	if 'shared' in status:
		if 'main' in status:
			shared = db.get_shared(chat_id)

			if text == '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
				if not shared or shared == '':
					answer = '–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,–∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å'
					db.update_status(chat_id,'shared_add')
				else:
					answer = '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏'
					db.update_status(chat_id,'start')

			elif text == '–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
				if shared and shared != '':
					if not 'shared' in shared:
						shared = shared.split()
						
						answer = '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,–∫–æ—Ç–æ—Ä–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:\n\n'
					
						for i in range(len(shared)):
							answer += str(i+1)+'. '+db.get_nick(shared[i])+'\n'

						db.update_status(chat_id,'shared_delete')
					else:
						orgin_chat_id = shared.split('_')[1]
						db.add_shared(chat_id,'')
						shared_origin = db.get_shared(orgin_chat_id).split()
						print(shared_origin)
						db.update_status(orgin_chat_id,'shared_delete')
						twice_answer_text = str(shared_origin.index(str(chat_id))+1)
						twice_answer = True
						twice_chat_id = orgin_chat_id
						answer = '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏'
						keyboard = start_buttons
						db.update_status(chat_id,'start')

				else:
					answer = '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
					db.update_status(chat_id,'start')

		elif 'add' in status:
			shared_chat_id = db.get_chat_from_nick(text)
			keyboard = start_buttons
			db.update_status(chat_id,'start')
			
			if shared_chat_id == []:
				answer = '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω'
			else:
				shared_chat_id = shared_chat_id[0]
				shared_origin = db.get_shared(chat_id)

				if not db.get_shared(shared_chat_id) or db.get_shared(shared_chat_id) == '':
					if not shared_origin:
						shared_origin = ''
					else:
						shared_origin += ' '

					shared_origin += str(shared_chat_id)
					shared_sec = 'shared_'+str(chat_id)

					db.add_shared(chat_id,shared_origin)
					db.add_shared(shared_chat_id,shared_sec)

					answer = f'–ê–∫–∫–∞–Ω—É—Ç {text} –¥–æ–±–∞–≤–ª–µ–Ω'

				else:
					answer = '–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏'

		elif 'delete' in status:
			keyboard = start_buttons
			db.update_status(chat_id,'start')	
			shared_origin = db.get_shared(chat_id)
			shared_origin = shared_origin.split()

			if text.isnumeric() and int(text)-1 < len(shared_origin):
				shared_chat_id = shared_origin[int(text)-1]
				nick = db.get_nick(shared_origin[int(text)-1])
				del shared_origin[int(text)-1]
				db.add_shared(chat_id,' '.join(shared_origin).strip())
				db.add_shared(shared_chat_id,'')
				answer = f'–ê–∫–∫–∞—É–Ω—Ç {nick} —É–¥–∞–ª—ë–Ω'
			else:
				answer = '–ù–µ–≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä'

	elif 'settings' in status:
		if 'choose' in status:
			user_regions = db.get_user(chat_id)[6].split(',')
			if text == '–î–æ–∞–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω/—Ä–µ–≥–∏–æ–Ω—ã':
				answer = "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: \n\n"
				new_regions = []
				for region in regions:
					if not region in user_regions:
						new_regions.append(region)

				answer += ','.join(new_regions)
				
				db.update_status(chat_id,'settings region add')
			elif text == '–£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω/—Ä–µ–≥–∏–æ–Ω—ã':
				answer = "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: \n\n"
				answer += ','.join(user_regions)
				db.update_status(chat_id,'settings region delete')

			elif text == '–£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω/—Ä–µ–≥–∏–æ–Ω—ã':
				answer = "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: \n\n"
				answer += ','.join(user_regions)
				db.update_status(chat_id,'settings region delete')

			elif text == '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞':
				answer = '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ—Ç—á—ë—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–π –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤: :\n\n1.–ö–∞–∂–¥—ã–π –¥–µ–Ω—å\n2.–ö–∞–∂–¥—ã–µ —Ç—Ä–∏ –¥–Ω—è\n3.–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é\n4.–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü\n\n–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω—É–∂–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞'
				db.update_status(chat_id,'period')

		elif 'region' in status:
			if 'add' in status:
				user_regions = db.get_user(chat_id)[6].split(',')
				choosed_regions = text.split(',')
				answer = ''
				
				for choosed_region in choosed_regions:
					for region in regions:
						if region.lower() == choosed_region.lower() and region not in user_regions:
							user_regions.append(region)
							answer += choosed_region+' –¥–æ–±–∞–≤–ª–µ–Ω(–∞)'+'\n'
							break
					else:
						answer += choosed_region+' –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'+'\n'

				db.update_regions(chat_id,','.join(user_regions))
				db.update_status(chat_id,'start')
				keyboard = start_buttons

			elif 'delete' in status:
				user_regions = db.get_user(chat_id)[6].split(',')
				choosed_regions = text.split(',')
				delete_regions = []
				answer = ''

				for choosed_region in choosed_regions:
					for region in user_regions:
						if region.lower() == choosed_region.lower():
							delete_regions.append(region)
							answer += choosed_region+' —É–¥–∞–ª—ë–Ω(–∞)'+'\n'
							break
					else:
						answer += choosed_region+' –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'+'\n'
				new_regions = []

				for region in user_regions:
					if not region in delete_regions:
						new_regions.append(region)

				db.update_regions(chat_id,','.join(new_regions))
				db.update_status(chat_id,'start')
				keyboard = start_buttons


	elif 'goods' in status:
		if 'main' in status:
			if text == '–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç':
				answer = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ'
				db.update_status(chat_id,'start')
				keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
				parse = True
			elif text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä':
				db.update_status(chat_id,'goods_add_product_url')
				answer = '–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä'
			elif text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
				new_status = 'change_wb_goods_change_choose'
				keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'),KeyboardButton('–£–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è')).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å—ë'),KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
				answer = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
				if len(products) == 0:
					answer = '–¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç'
					keyboard = start_buttons
					new_status = 'start'
				
				db.update_status(chat_id,new_status)

	if 'add_product' in status:
		if 'url' in status:
			try:
				if 'ozon' in text:
					if '/?' in text:
						id_ = text.split('/?')[0].split('-')[-1]
					else:
						id_ = text.split('/')[-2].split('-')[-1]
				elif 'wildberries' in text:	
					id_ = text.split('/')[4].split('/')[0]
				else:
					id_ = ''
			except:
				traceback.print_exc()
				id_ = ''

			if id_.isnumeric():
				db.update_status(chat_id,'goods_add_product_name')
				answer = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'
				db.update_temp(chat_id,text)
			else:
				db.update_status(chat_id,'start')
				answer = '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞,–Ω–µ–≤–µ—Ä–Ω—ã–π url'
				keyboard = start_buttons
		
		elif 'name' in status:
			temp = db.get_temp(chat_id)
			if 'wildberries' in temp:
				db.update_temp(chat_id,temp+';;;;;'+text)
				db.update_status(chat_id,'goods_add_product_search')
				answer = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è , —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é'
			elif 'ozon' in temp:
				save_name = '_ozon'
				products = get_products(chat_id_products,save_name)
				name = text
				db.update_status(chat_id,'start')
				answer = f'–¢–æ–≤–∞—Ä "{name}" –¥–æ–±–∞–≤–ª–µ–Ω'
				product = {'url':temp,'name':name,'place':{'–º–æ—Å–∫–≤–∞':None,'–∫–∞–∑–∞–Ω—å':None}}
				products.append(product)
				keyboard = start_buttons
			
				save = True

				if len(products) == 1:
					print('here')
					twice_answer = True
					twice_answer_text = '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞'
					db.update_status(chat_id,'goods_main')

		elif 'search' in status:
			db.update_status(chat_id,'start')
			url,name = db.get_temp(chat_id).split(';;;;;')
			id_ = int(url.split('/')[4].split('/')[0])
			
			product = {'url':url,'name':name,'search':[]}

			for search in text.split(','):
				plases = {}
				
				for region in regions:
					plases[region] = None
				
				product['search'].append([search,plases]) 

			products.append(product)
			save = True
			answer = f'–¢–æ–≤–∞—Ä "{name}" –¥–æ–±–∞–≤–ª–µ–Ω'
			keyboard = start_buttons

			if len(products) == 1:
				print('here')
				twice_answer = True
				twice_answer_text = '–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç—á—ë—Ç–∞'
				db.update_status(chat_id,'goods_main')
	
	elif 'change' in status:
		if 'wb' in status:
			if 'choose' in status:
				if text == '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë':
					answer = '–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω'
					keyboard = start_buttons
					db.update_status(chat_id,'start')
					products = []
					save = True

				elif text in ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞','–£–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è']:
					if '—Å–ª–æ–≤–∞' in text:
						end_word = '–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'
						status_str = '_search'
						suf = '()'
					else:
						end_word = '—É–¥–∞–ª–∏—Ç—å'
						status_str = '_delete'
						suf = '(–∞)'

					new_status = 'wb_change_product_do'+status_str
					list_text = ''

					if len(products) > 0:
						for i in range(len(products)):
							list_text += str(i+1)+') '+products[i]['name']+'\n\n' 
						answer = f'–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: \n\n{list_text}\n\n '+f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Ä—è–¥–æ–∫–≤—ã–µ –Ω–æ–º–µ—Ä{suf} —Ç–æ–≤–∞—Ä–∞,–∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ '+end_word
						db.update_status(chat_id,new_status)
					else:
						answer = '–¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç'
						db.update_status(chat_id,'start')
						keyboard = start_buttons
			
			elif 'product' in status:
				if 'do' in status:
					print('here')
					if 'search' in status:
						if text.isnumeric() and int(text)-1 < len(products):
							db.update_status(chat_id,'wb_goods_change_search')

							#temp = db.get_temp(chat_id)
							num = int(text)-1
							db.update_temp(chat_id,text)
							
							name = products[num]['name']
							search_list = ''
							search = products[num]['search']
							count = 1
							
							for i in range(len(search)):
								search_list += str(i+1)+') '+search[i][0]+'\n'
							
							answer = f'–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è `{name}`:\n\n {search_list} \n–û—Ç–ø—Ä–∞–≤—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é'
							keyboard = edit_search_keyboard
						else:
							answer = '–¢–∞–∫–æ–π —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
							db.update_status(chat_id,'wb_change_choose')
							twice_answer = True
							twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'
					
					elif 'delete' in status:
						text = text.split(',')
						old_products = copy.deepcopy(products)
						answer = ''
						
						for el in text:
							if el.isnumeric() and int(el)-1 < len(old_products):
								num = int(el) - 1
								index = products.index(old_products[num])
								del products[index]
								answer += f'–¢–æ–≤–∞—Ä {el} —É–¥–∞–ª—ë–Ω\n'
							else:
								answer += f'–¢–æ–≤–∞—Ä {el} –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç\n'
						
						save = True
						twice_answer = True
						db.update_status(chat_id,'wb_change_choose')
						twice_answer_text = '–£–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'
			
			elif 'search' in status:
				temp = db.get_temp(chat_id)
				if 'add' in status:
					answer = '–ó–∞–ø—Ä–æ—Å –¥–æ–±–∞–≤–ª–µ–Ω,–æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç—á—ë—Ç'
					keyboard = start_buttons

					plases = {}
					for region in regions:
						plases[region] = None
				
					products[int(temp)-1]['search'].append([text,plases]) 
					save = True

					db.update_status(chat_id,'wb_change_choose')
					twice_answer = True
					twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'
				
				elif text == '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π':
					db.update_status(chat_id,'wb_goods_change_search_add')
					answer = '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Ç–æ–≤–∞—Ä—É '+products[int(temp)-1]['name']

				elif text == '–ù–∞–∑–∞–¥':
					answer = ''
					db.update_status(chat_id,'wb_change_choose')
					twice_answer = True
					twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'
				else:
					db.update_status(chat_id,'wb_goods_change_product')
					keyboard = start_buttons
					old_products = copy.deepcopy(products)

					for num in text.split(','):
						num = num.strip()
						if num.isnumeric() and not int(num)-1 >= len(old_products[int(temp)-1]['search']):
							name = products[int(temp)-1]['name']

							if len(name) > 15:
								name = name[:15]+'...'

							index = products[int(temp)-1]['search'].index(old_products[int(temp)-1]['search'][int(num)-1])
							search = products[int(temp)-1]['search'][index][0]
							answer_mess = f'–ó–∞–ø—Ä–æ—Å {search} –¥–ª—è —Ç–æ–≤–∞—Ä–∞ {name} - —É–¥–∞–ª—ë–Ω'
							
							del products[int(temp)-1]['search'][index]
							save = True
						else:
							answer_mess = f'{num} —Ç–∞–∫–æ–π –Ω–æ–º–µ—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'

						await message.answer(answer_mess)

					answer = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
					db.update_status(chat_id,'wb_change_choose')
					twice_answer = True
					twice_answer_text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'
			

		elif 'ozon' in status:
			save_name = '_ozon'
			products = get_products(chat_id_products,save_name)
			old_products = products[:]
			if 'delete' in status:
				for num in text.split(','):
					num = num.strip()
					keyboard = start_buttons
					db.update_status(chat_id,'change_market')
					
					if num.isnumeric() and int(num) <= len(old_products):
						index = products.index(old_products[int(num)-1])
						del products[index]
						answer_mess = f'–¢–æ–≤–∞—Ä {num} —É–¥–∞–ª—ë–Ω'
						save = True
					else:
						answer_mess = f'{num} –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä'

					await message.answer(answer_mess)
				
				answer = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
				twice_answer = True
				twice_answer_text = 'Ozon'
	
	elif 'competitor' in status:
		if 'main' in status:
			if text == '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ':
				answer = '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'
				db.update_status(chat_id,'competitor_add_url')
			elif text == '–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏—Ö —É–¥–∞–ª–µ–Ω–∏–µ':
				db.update_status(chat_id,'competitor_delete')
				answer = '–£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'
				print('products/products_wb_competive '+str(chat_id))
				if os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
					products = get_products(chat_id_products,'_wb_competive')
					
					if products != {}:
						keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å—ë')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
						answer = ''
						count = 1
						for product in products:
							answer += str(count)+'. '+products[product]['name']+'\n'
							count += 1
						answer += '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å'

			elif text == '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞':
				db.update_status(chat_id,'competitor_shop_choice')
				answer = '–£ –≤–∞—Å –Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤'
				print('products/products_shop '+str(chat_id))
				keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
				
				if os.path.exists('products/products_shop '+str(chat_id)+'.json'):
					products = get_products(chat_id_products,'_shop')
					
					if products != {}:
						keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω')).add(KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å—ë')).add(KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
						answer = ''
						count = 1
						for product in products:
							answer += str(count)+'. '+products[product]['name']+'\n'
							count += 1
						answer += '\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å'
		
		elif 'shop' in status:
			print('here--------------------')
			if 'choice' in status:
				products = get_products(chat_id_products,'_shop')
				if text == '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë':
					answer = '–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω'
					products = {}
					save = True
					save_name = '_shop'
				elif text == '–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω':
					answer = '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞–≥–∞–∑–∏–Ω,–∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å'
					db.update_status(chat_id,'competitor_shop_add')
				elif text.isnumeric() and len(products) >= int(text)-1:
					answer = '–ú–∞–≥–∞–∑–∏–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω'
					products_keys = list(products.keys())
					del products[products_keys[int(text)-1]]
					save = True
					save_name = '_shop'
					twice_answer = True
					twice_answer_text = '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞'
					db.update_status(chat_id,'competitor_main')
			
			elif 'add' in status:
				answer = add_competitor_shop(text,chat_id_products)
				twice_answer = True
				twice_answer_text = '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –º–∞–≥–∞–∑–∏–Ω–∞'
				db.update_status(chat_id,'competitor_main')

		elif 'delete' in status:
			if os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
				products = get_products(chat_id_products,'_wb_competive')				
				old_products = list(products.keys())
				db.update_status(chat_id,'start')
				keyboard = start_buttons
				if text == '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë':
					products = {}
					save = True
					save_name = '_wb_competive'
					answer = '–°–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω'
				else:
					for num in text.split(','):
						num = num.strip()
						if num.isnumeric():
							if not int(num)-1 >= len(old_products):
								count = 0
								for product in old_products:
									print(count)
									if count == int(num)-1:
										name = products[product]['name']
										del products[product]
										break
									count += 1
								answer_mess = f'–¢–æ–≤–∞—Ä {name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏ –±–æ–ª–µ–µ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è'
								save = True
								save_name = '_wb_competive'

							else:
								answer_mess = '–¢–∞–∫–æ–π —Ç–æ–≤–∞—Ä –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
						else:
							db.update_status(chat_id,'start')
							answer_mess = '–ù–µ–≤–æ–∑–º–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä'
							keyboard = start_buttons

						await message.answer(answer_mess)

		elif 'add' in status:
			if 'url' in status:
				try:
					id_ = text.split('/')[4].split('/')[0]
				except:
					id_ = ''
				
				if not id_ == '':
					answer = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, "–¢–æ–≤–∞—Ä –ø–æ–¥—É—à–∫–∞ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –ò–ü –ü—É–ø–∫–∏–Ω"'
					db.update_status(chat_id,'competitor_add_name')
					db.update_temp(chat_id,id_)
				else:
					db.update_status(chat_id,'start')
					answer = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π url'
					keyboard = start_buttons
			
			elif 'name' in status:
				db.update_status(chat_id,'start')
				answer = '–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω, –±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è'
				keyboard = start_buttons
				id_ = db.get_temp(chat_id)

				if os.path.exists('products/products_wb_competive '+str(chat_id)+'.json'):
					products = get_products(chat_id_products,'_wb_competive')
				else:
					products = {}

				price = {}
				for region in regions:
					price[region] = '0'
				
				products[id_] = {'name':text,'price':price}
				save = True
				save_name = '_wb_competive'
	elif answer == '':
		if status != 'main':
			start_message = '–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω,–≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ'
		db.update_status(chat_id,'start')
		await message.answer(start_message,reply_markup=start_buttons)
		return
	

	if save:
		save_products(products,chat_id_products,save_name)

	if answer != '':
		await message.answer(answer,reply_markup=keyboard)
	
	if twice_answer:
		await answer_message(message,twice_answer_text,twice_chat_id)

	if parse:
		start_parse(str(chat_id),True,False)


if __name__ == '__main__':
	Thread(target=start_loop,args=[]).start()
	executor.start_polling(dp,skip_updates=True)